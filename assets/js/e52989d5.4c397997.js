"use strict";(self.webpackChunkpluto=self.webpackChunkpluto||[]).push([[128],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),f=o,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5223:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,l={unversionedId:"QoL Improvements/VM Dump",id:"QoL Improvements/VM Dump",title:"VM Dump",description:"Pluto offers an optional, configurable feature to see every instruction that is executed in the Lua VM.",source:"@site/docs/QoL Improvements/VM Dump.md",sourceDirName:"QoL Improvements",slug:"/QoL Improvements/VM Dump",permalink:"/docs/QoL Improvements/VM Dump",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Syntax Errors",permalink:"/docs/QoL Improvements/Syntax Errors"},next:{title:"Backwards Compatibility",permalink:"/docs/category/backwards-compatibility"}},u={},p=[{value:"Configuration",id:"configuration",level:2},{value:"What it looks like",id:"what-it-looks-like",level:2}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Pluto offers an optional, configurable feature to see every instruction that is executed in the Lua VM."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"VM Dump can be enabled by defining ",(0,o.kt)("inlineCode",{parentName:"p"},"PLUTO_VMDUMP")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"luaconf.h")," or your build config."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To reduce noise, you can modify ",(0,o.kt)("inlineCode",{parentName:"li"},"PLUTO_VMDUMP_COND")," to set a custom condition for when VM Dump is active. By default, the condition is ",(0,o.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,o.kt)("li",{parentName:"ul"},"Although not a configuration specific to VM Dump, it should be noted that you can modify the output macros ",(0,o.kt)("inlineCode",{parentName:"li"},"lua_writestring")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"lua_writeline"),".")),(0,o.kt)("h2",{id:"what-it-looks-like"},"What it looks like"),(0,o.kt)("p",null,"Given the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"showLineNumbers",showLineNumbers:!0},'local value = 3\nswitch value do\n  case 1:\n  case 2:\n  case 3:\n  case 4:\n  case 5:\n    print("Got 1-5.")\n    break\n  default:\n    print("Value is greater than 5.")\nend\n-- Break jumps here.\n')),(0,o.kt)("p",null,"It will output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'VARARGPREP\n[test.lua:1] LOADI 3\n[test.lua:2] MOVE\n[test.lua:3] EQI 1\n[test.lua:4] EQI 2\n[test.lua:5] EQI 3\n[test.lua:5] JMP\n[test.lua:8] GETTABUP print\n[test.lua:8] LOADK {string "Got 1-5."}\n[test.lua:8] CALL\n<OUTPUT> Got 1-5.\n[test.lua:9] JMP\n[test.lua:12] RETURN\n')),(0,o.kt)("p",null,"Or, if it was compiled to stripped bytecode:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'VARARGPREP\nLOADI 3\nMOVE\nEQI 1\nEQI 2\nEQI 3\nJMP\nGETTABUP print\nLOADK {string "Got 1-5."}\nCALL\n<OUTPUT> Got 1-5.\nJMP\nRETURN\n')))}s.isMDXComponent=!0}}]);